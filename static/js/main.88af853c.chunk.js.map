{"version":3,"sources":["routes/Foods.js","pages/home.js","pages/detail.js","pages/detail_science.js","routes/Navi.js","pages/header.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["ShowFood","foodCd","foodNm","foodKindNm","largeCls","middleCls","smallCls","Table","Row","Cell","width","to","pathname","state","Label","Home","isLoading","foodObjs","currentPage","changePage","e","page","a","console","log","activePage","setState","getFoods","axios","get","item","data","response","body","items","this","Container","style","marginTop","textAlign","Segment","Header","content","collapsing","top","left","HeaderCell","Body","map","each","key","largeClsNm","middleClsNm","smallClsNm","Pagination","onPageChange","marginBottom","defaultActivePage","totalPages","React","Component","initialState","foodObj","loaded","Detail","getFoodDetail","url","showContent","i","articleNm","vol","year","journalNm","prevProps","prevState","props","location","history","undefined","push","update","showText","Message","MessageHeader","Detail_science","source","require","activeItem","value","results","Navigation","resultRenderer","handleItemClick","name","onChange","x","handleResultSelect","result","handleSearchChange","setTimeout","length","re","RegExp","_","escapeRegExp","filter","test","Menu","pointing","Item","as","Link","active","onClick","position","Search","loading","onResultSelect","onSearchChange","debounce","leading","headerTop","inverted","color","fontFamily","fontSize","fontWeight","App","Navi","path","exact","component","Details","Details_sci","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"g5vLAsCeA,MA9Bf,YAAkF,IAA9DC,EAA6D,EAA7DA,OAAQC,EAAqD,EAArDA,OAAQC,EAA6C,EAA7CA,WAAYC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,SACjE,OACI,kBAACC,EAAA,EAAMC,IAAP,KACI,kBAACD,EAAA,EAAME,KAAP,CAAYC,MAAO,GACdT,GAEL,kBAACM,EAAA,EAAME,KAAP,CAAYC,MAAO,GACdR,GAEL,kBAACK,EAAA,EAAME,KAAP,CAAYC,MAAO,GACdP,EADL,MACoBC,EADpB,MACiCC,EADjC,MAC+CC,GAE/C,kBAACC,EAAA,EAAME,KAAP,CAAYC,MAAO,GACf,kBAAC,IAAD,CAAMC,GAAI,CACNC,SAAS,YAAD,OAAcX,EAAd,KACRY,MAAO,CAAEZ,SAAQC,YAEjB,kBAACY,EAAA,EAAD,8CAEJ,kBAAC,IAAD,CAAMH,GAAI,CACNC,SAAS,oBAAD,OAAsBX,EAAtB,KACRY,MAAO,CAAEZ,SAAQC,YAEjB,mCAAc,kBAACY,EAAA,EAAD,qC,wCC8EnBC,E,2MA5EbF,MAAQ,CACNG,WAAW,EACXC,SAAU,GACVC,YAAa,G,EAGfC,W,uCAAa,WAAOC,EAAGC,GAAV,SAAAC,EAAA,6DACXC,QAAQC,IAAI,aAAcH,EAAKI,YADpB,SAEL,EAAKC,SAAS,CAAER,YAAaG,EAAKI,aAF7B,OAGX,EAAKE,WAHM,2C,0DAKbA,S,sBAAW,gCAAAL,EAAA,6DACDJ,EAAgB,EAAKL,MAArBK,YACRK,QAAQC,IAAIN,GAFH,SAYCU,IAAMC,IAAN,yOAA4OX,EAA5O,gFAZD,gBAOQY,EAPR,EAIPC,KACEC,SACEC,KACEC,MAASJ,KAMjB,EAAKJ,SAAS,CAAEV,WAAW,IAE3B,EAAKU,SAAS,CAAET,SAAUa,IAfjB,2C,mFAkBTK,KAAKR,a,+BAEG,IACAX,EAAcmB,KAAKtB,MAAnBG,UACAC,EAAakB,KAAKtB,MAAlBI,SAER,OADAM,QAAQC,IAAI,UAAWP,GAErB,kBAACmB,EAAA,EAAD,CAAWC,MAAO,CAAEC,UAAW,SAAWC,UAAU,UAClD,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,QAAQ,wCAAUH,UAAU,WACpC,gCACE,kBAAChC,EAAA,EAAD,CAAOoC,YAAU,EAACN,MAAO,CAAE3B,MAAO,MAAOkC,IAAK,MAAOC,KAAM,QACzD,kBAACtC,EAAA,EAAMkC,OAAP,KACE,kBAAClC,EAAA,EAAMC,IAAP,KACE,kBAACD,EAAA,EAAMuC,WAAP,CAAkBpC,MAAO,GAAzB,gBACA,kBAACH,EAAA,EAAMuC,WAAP,CAAkBpC,MAAO,GAAzB,sBACA,kBAACH,EAAA,EAAMuC,WAAP,CAAkBpC,MAAO,GAAzB,gBACA,kBAACH,EAAA,EAAMuC,WAAP,CAAkBpC,MAAO,GAAzB,kBAGJ,kBAACH,EAAA,EAAMwC,KAAP,KACG/B,EACG,aACAC,EAAS+B,KAAI,SAAAC,GACb,OACE,kBAAC,EAAD,CACEC,IAAKD,EAAKhD,OACVA,OAAQgD,EAAKhD,OACbC,OAAQ+C,EAAK/C,OACbC,WAAY8C,EAAK9C,WACjBC,SAAU6C,EAAKE,WACf9C,UAAW4C,EAAKG,YAChB9C,SAAU2C,EAAKI,oBAS/B,kBAACC,EAAA,EAAD,CAAYC,aAAcpB,KAAKhB,WAAYkB,MAAO,CAAEmB,aAAc,OAASC,kBAAmB,EAAGC,WAAY,W,GAvElGC,IAAMC,W,mBC3BnBC,EAAe,CACnB5D,OAAQ,GACRC,OAAQ,GACR4D,QAAS,GACTC,QAAQ,GA8HKC,E,2MA1HbnD,MAAQgD,E,EACRI,c,uCAAgB,WAAOhE,EAAQC,GAAf,mBAAAoB,EAAA,6DACd,EAAKI,SAAS,CAAEzB,OAAQA,EAAQC,OAAQA,IAClCgE,EAFQ,oQAE2PjE,EAF3P,kEAGdsB,QAAQC,IAAIvB,EAAQiE,GAHN,kBAKwDtC,IAAMC,IAAIqC,GALlE,gBAKiCpC,EALjC,EAKJC,KAAQC,SAAYC,KAAQC,MAASJ,KAC7CP,QAAQC,IAAI,WACZ,EAAKE,SAAS,CAAEoC,QAAShC,EAAMiC,QAAQ,EAAM9D,OAAQA,EAAQC,OAAQA,IAPzD,kDAaZqB,QAAQC,IAAI,yBACZ,EAAKE,SAAS,CAAEqC,QAAQ,IAdZ,0D,0DAqEhBI,YAAc,SAACC,GACb,OACE,yBAAKlB,IAAKkB,EAAEC,WACV,kBAAC7B,EAAA,EAAD,CAASU,IAAKkB,EAAEC,WACd,2BAAID,EAAE1B,SACN,kBAAC5B,EAAA,EAAD,CAAOoC,IAAKkB,EAAEC,WACXD,EAAEC,UADL,IACiBD,EAAEE,IADnB,IACyBF,EAAEG,KAD3B,iBAC+CH,EAAEI,c,kFAvDtCC,EAAWC,GAC5BnD,QAAQC,IAAI,cACZD,QAAQC,IAAI,IAAKiD,GACjBlD,QAAQC,IAAI,IAAKW,KAAKwC,OAHiB,MAITxC,KAAKwC,MAA3BC,EAJ+B,EAI/BA,SAAUC,EAJqB,EAIrBA,QAEdD,IAAaH,EAAUG,gBACFE,IAAnBF,EAAS/D,MACXgE,EAAQE,KAAK,KAGb5C,KAAK8B,cAAcW,EAAS/D,MAAMZ,OAAQ2E,EAAS/D,MAAMX,W,0CAM7DqB,QAAQC,IAAI,aADM,MAEYW,KAAKwC,MAA3BC,EAFU,EAEVA,SAAUC,EAFA,EAEAA,QAFA,EAGiB1C,KAAKtB,MAHtB,EAGVmE,OAHU,EAGF/E,OAHE,EAGMC,YACD4E,IAAnBF,EAAS/D,MACXgE,EAAQE,KAAK,MAGb5C,KAAKT,SAAS,CACZzB,OAAQ2E,EAAS/D,MAAMZ,OACvBC,OAAQ0E,EAAS/D,MAAMX,SAEzBiC,KAAK8B,cAAcW,EAAS/D,MAAMZ,OAAQ2E,EAAS/D,MAAMX,QACzDqB,QAAQC,IAAI,YAAaW,KAAKtB,U,+BAqChC,IAAIoE,EADG,EAE6C9C,KAAKtB,MAAzCZ,GAFT,EAEC+E,OAFD,EAES/E,QAAQC,EAFjB,EAEiBA,OAAQ4D,EAFzB,EAEyBA,QAASC,EAFlC,EAEkCA,OAiBzC,OAhBAxC,QAAQC,IAAI,SAAUW,KAAKtB,OAEzBoE,GADa,IAAXlB,EACS,kBAACmB,EAAA,EAAD,KACT,kBAACC,EAAA,EAAD,KACGjF,EADH,IACYD,EADZ,KAE4B,6BAC3B6D,EAAQd,IAAIb,KAAKgC,cAGT,kBAACe,EAAA,EAAD,KACT,kBAACC,EAAA,EAAD,KACGjF,EADH,IACYD,EADZ,KAE4B,6BAC5B,qIAIF,kBAACmC,EAAA,EAAD,CAAWC,MAAO,CAAEC,UAAW,UAC7B,kBAACE,EAAA,EAAD,KAAS,kBAAC,IAAD,CAAM7B,GAAI,CACjBC,SAAS,oBAAD,OAAsBX,EAAtB,KACRY,MAAO,CAAEZ,SAAQC,YAEjB,mCAAc,kBAACY,EAAA,EAAD,mCAGhB,kBAAC0B,EAAA,EAAD,KACGyC,Q,GApHUtB,IAAMC,WCPrBC,EAAe,CACjB5D,OAAQ,GACRC,OAAQ,GACR4D,QAAS,GACTC,QAAQ,GA+GGqB,E,2MA3GXvE,MAAQgD,E,EACRI,c,uCAAgB,WAAOhE,EAAQC,GAAf,mBAAAoB,EAAA,6DACZ,EAAKI,SAAS,CAAEzB,OAAQA,EAAQC,OAAQA,IAClCgE,EAFM,oQAE6PjE,EAF7P,kEAGZsB,QAAQC,IAAIvB,EAAQiE,GAHR,kBAK4DtC,IAAMC,IAAIqC,GALtE,gBAKqCpC,EALrC,EAKAC,KAAQC,SAAYC,KAAQC,MAASJ,KAC7CP,QAAQC,IAAI,WACZ,EAAKE,SAAS,CAAEoC,QAAShC,EAAMiC,QAAQ,EAAM9D,OAAQA,EAAQC,OAAQA,IAP7D,kDAaRqB,QAAQC,IAAI,yBACZ,EAAKE,SAAS,CAAEqC,QAAQ,IAdhB,0D,0DAsDhBI,YAAc,SAACC,GACX,OACI,yBAAKlB,IAAKkB,EAAEC,WACR,kBAAC7B,EAAA,EAAD,CAASU,IAAKkB,EAAEC,WACZ,2BAAID,EAAE1B,SACN,kBAAC5B,EAAA,EAAD,CAAOoC,IAAKkB,EAAEC,WACTD,EAAEC,UADP,IACmBD,EAAEE,IADrB,IAC2BF,EAAEG,KAD7B,iBACiDH,EAAEI,c,kFAxChDC,EAAWC,GAC1BnD,QAAQC,IAAI,cACZD,QAAQC,IAAI,IAAKiD,GACjBlD,QAAQC,IAAI,IAAKW,KAAKwC,OAHe,MAIPxC,KAAKwC,MAA3BC,EAJ6B,EAI7BA,SAAUC,EAJmB,EAInBA,QAEdD,IAAaH,EAAUG,gBACAE,IAAnBF,EAAS/D,MACTgE,EAAQE,KAAK,KAGb5C,KAAK8B,cAAcW,EAAS/D,MAAMZ,OAAQ2E,EAAS/D,MAAMX,W,0CAMjEqB,QAAQC,IAAI,aADI,MAEcW,KAAKwC,MAA3BC,EAFQ,EAERA,SAAUC,EAFF,EAEEA,QAFF,EAGmB1C,KAAKtB,MAHxB,EAGRmE,OAHQ,EAGA/E,OAHA,EAGQC,YACD4E,IAAnBF,EAAS/D,MACTgE,EAAQE,KAAK,MAGb5C,KAAKT,SAAS,CACVzB,OAAQ2E,EAAS/D,MAAMZ,OACvBC,OAAQ0E,EAAS/D,MAAMX,SAE3BiC,KAAK8B,cAAcW,EAAS/D,MAAMZ,OAAQ2E,EAAS/D,MAAMX,QACzDqB,QAAQC,IAAI,YAAaW,KAAKtB,U,+BAsBlC,IAAIoE,EADC,EAE+C9C,KAAKtB,MAAzCZ,GAFX,EAEG+E,OAFH,EAEW/E,QAAQC,EAFnB,EAEmBA,OAAQ4D,EAF3B,EAE2BA,QAASC,EAFpC,EAEoCA,OAiBzC,OAhBAxC,QAAQC,IAAI,SAAUW,KAAKtB,OAEvBoE,GADW,IAAXlB,EACW,kBAACmB,EAAA,EAAD,KACP,kBAACC,EAAA,EAAD,KACKjF,EADL,IACcD,EADd,KAEoB,6BACnB6D,EAAQd,IAAIb,KAAKgC,cAGX,kBAACe,EAAA,EAAD,KACP,kBAACC,EAAA,EAAD,KACKjF,EADL,IACcD,EADd,KAEoB,6BACpB,qIAIJ,kBAACmC,EAAA,EAAD,CAAWC,MAAO,CAAEC,UAAW,UAC3B,kBAACE,EAAA,EAAD,KAAS,kBAAC,IAAD,CAAM7B,GAAI,CACfC,SAAS,YAAD,OAAcX,EAAd,KACRY,MAAO,CAAEZ,SAAQC,YAEjB,mCAAc,kBAACY,EAAA,EAAD,+CAGlB,kBAAC0B,EAAA,EAAD,KACKyC,Q,GArGQtB,IAAMC,W,qCCJ7ByB,G,OADOC,EAAQ,MACDrD,MAOpBV,QAAQC,IAAI6D,GACZ,IAAMxB,EAAe,CACnB0B,WAAY,OACZvE,WAAW,EACXwE,MAAO,GACPC,QAAS,IAkFIC,E,2MA5Eb7E,MAAQgD,E,EAER8B,eAAiB,YAAyB,IAAtB1F,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OAC1B,OAAQ,kBAAC,IAAD,CAAMS,GAAI,CAChBC,SAAS,YAAD,OAAcX,EAAd,KACRY,MAAO,CAAEZ,SAAQC,YAEjB,kBAACY,EAAA,EAAD,CAAOoC,IAAKjD,EAAQyC,QAASxC,M,EAKjC0F,gBAAkB,SAACxE,EAAD,OAAMyE,EAAN,EAAMA,KAAN,OAAiB,EAAKnE,SAAS,CAAE6D,WAAYM,K,EAC/DC,SAAW,SAACC,GACVxE,QAAQC,IAAIuE,I,EAGdC,mBAAqB,SAAC5E,EAAD,GAAoB,IAAd6E,EAAa,EAAbA,OACzB,EAAKvE,SAAS,CAAE8D,MAAOS,EAAO/F,U,EAGhCgG,mBAAqB,SAAC9E,EAAD,GAAmB,IAAboE,EAAY,EAAZA,MACzB,EAAK9D,SAAS,CAAEV,WAAW,EAAMwE,UAEjCW,YAAW,WACT,GAAI,EAAKtF,MAAM2E,MAAMY,OAAS,EAAG,OAAO,EAAK1E,SAASmC,GAEtD,IAAMwC,EAAK,IAAIC,OAAOC,IAAEC,aAAa,EAAK3F,MAAM2E,OAAQ,KAGxD,EAAK9D,SAAS,CACZV,WAAW,EACXyE,QAASc,IAAEE,OAAOpB,GAJJ,SAACY,GAAD,OAAYI,EAAGK,KAAKT,EAAO/F,eAM1C,M,wEAGK,IAAD,EAC2CiC,KAAKtB,MAA/C0E,EADD,EACCA,WAAYvE,EADb,EACaA,UAAWwE,EADxB,EACwBA,MAAOC,EAD/B,EAC+BA,QAEtC,OACE,kBAACrD,EAAA,EAAD,CAAWC,MAAO,CAAEC,UAAW,UAC7B,kBAACqE,EAAA,EAAD,CAAMC,UAAQ,GACZ,kBAACD,EAAA,EAAKE,KAAN,CACEC,GAAIC,IACJpG,GAAG,IACHkF,KAAK,OACLmB,OAAuB,SAAfzB,EACR0B,QAAS9E,KAAKyD,kBAEhB,kBAACe,EAAA,EAAKE,KAAN,CACEhB,KAAK,UACLmB,OAAuB,YAAfzB,EACR0B,QAAS9E,KAAKyD,kBAEhB,kBAACe,EAAA,EAAKA,KAAN,CAAWO,SAAS,SAClB,kBAACP,EAAA,EAAKE,KAAN,KACE,kBAACM,EAAA,EAAD,eACEC,QAASpG,EACTqG,eAAgBlF,KAAK6D,mBACrBsB,eAAgBf,IAAEgB,SAASpF,KAAK+D,mBAAoB,IAAK,CACvDsB,SAAS,IAEX/B,QAASA,EACTD,MAAOA,EACPG,eAAgBxD,KAAKwD,gBACjBxD,KAAKwC,gB,GAnEAhB,IAAMC,WCChB6D,MApBf,WACI,OACI,kBAACrF,EAAA,EAAD,KACA,kBAACI,EAAA,EAAD,CAASkF,UAAQ,EAACnF,UAAU,UACxB,kBAACE,EAAA,EAAD,CACIqE,GAAG,KACHpE,QAAQ,2EACRgF,UAAQ,EAACC,MAAM,SACftF,MAAO,CACHuF,WAAY,QACZC,SAAU,MACVC,WAAY,MACZtE,aAAc,QACdlB,UAAW,cCChByF,MAbf,WACI,OACI,kBAAC,IAAD,KACI,kBAAC,EAAD,MACA,kBAACC,EAAD,MACA,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWpH,IACxC,kBAAC,IAAD,CAAOkH,KAAK,mBAAmBE,UAAWC,IAC1C,kBAAC,IAAD,CAAOH,KAAK,2BAA2BE,UAAWE,MCF1CC,QACW,cAA7BC,OAAO3D,SAAS4D,UAEe,UAA7BD,OAAO3D,SAAS4D,UAEhBD,OAAO3D,SAAS4D,SAASC,MACvB,2D,QCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,2DErInBC,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.88af853c.chunk.js","sourcesContent":["//Food는 콤포넌트\n\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Table, Label } from 'semantic-ui-react'\n\n\nfunction ShowFood({ foodCd, foodNm, foodKindNm, largeCls, middleCls, smallCls }) {\n    return (\n        <Table.Row>\n            <Table.Cell width={1}>\n                {foodCd}\n            </Table.Cell>\n            <Table.Cell width={1}>\n                {foodNm}\n            </Table.Cell>\n            <Table.Cell width={1}>\n                {foodKindNm} > {largeCls} > {middleCls} > {smallCls}\n            </Table.Cell>\n            <Table.Cell width={1}>\n                <Link to={{\n                    pathname: `/details/${foodCd}/`,\n                    state: { foodCd, foodNm }\n                }}>\n                    <Label>한의문헌정보</Label>\n                </Link>\n                <Link to={{\n                    pathname: `/details_science/${foodCd}/`,\n                    state: { foodCd, foodNm }\n                }}>\n                    <span> </span><Label>학술정보</Label>\n                </Link>\n            </Table.Cell>\n        </Table.Row>\n    )\n}\n\nexport default ShowFood;\n\n//9\t대표식품 목록 및 분류\n//353 page까지 있음. \n//foodCd: \"100003\"\n//foodNm: \"가루전병\"\n//foodKindNm: \"복합식품\"\n//largeClsNm: \"부식\"\n//middleClsNm: \"구이류\"\n//smallClsNm: \"전\"\n//tradFoodCnt: \"1\"","import React from 'react';\nimport logo from '../logo.svg';\nimport '../App.css';\nimport '../index.css';\nimport axios from \"axios\"\nimport ShowFood from \"../routes/Foods\"\nimport {\n  Header,\n  Segment,\n  Table,\n  Pagination,\n  Container,\n  Grid,\n} from 'semantic-ui-react';\n\n\nconst style = {\n  h1: {\n    marginTop: '3em',\n  },\n  h2: {\n    margin: '4em 0em 2em',\n  },\n  h3: {\n    marginTop: '2em',\n    padding: '2em 0em',\n  },\n  last: {\n    marginBottom: '300px',\n  },\n}\n\nclass Home extends React.Component {\n  state = {\n    isLoading: true,\n    foodObjs: [],\n    currentPage: 1\n  }\n\n  changePage = async (e, page) => {\n    console.log('changePage', page.activePage)\n    await this.setState({ currentPage: page.activePage })\n    this.getFoods();\n  }\n  getFoods = async () => {\n    const { currentPage } = this.state;\n    console.log(currentPage)\n    const {\n      data: {\n        response: {\n          body: {\n            items: { item }\n          }\n        }\n      }\n    }\n      = await axios.get(`https://cors-anywhere.herokuapp.com/https://tradifood.net/api/service/TradFoodInfoService/getFoodCateogryList?serviceKey=lLjoGCVK2fzZyHfHUXBIhIbHxQ8GhCmNpnKeFx4m4cfeUuneSaQMdhnxVeAcbN9CtEcRBnmMphI7zSwJL%2BJ7sg%3D%3D&pageNo=${currentPage}&numOfRows=10&type=JSON&SG_APIM=2ug8Dm9qNBfD32JLZGPN64f3EoTlkpD8kSOHWfXpyrY`)\n    this.setState({ isLoading: false })\n    // const foodNames = item.map(function(i){return i.foodNm})\n    this.setState({ foodObjs: item })\n  }\n  componentDidMount() {\n    this.getFoods();\n  }\n  render() {\n    const { isLoading } = this.state\n    const { foodObjs } = this.state\n    console.log(\"example\", foodObjs)\n    return (\n      <Container style={{ marginTop: '0.5em' }} textAlign=\"center\" >\n        <Segment>\n          <Header content='한국음식 목록' textAlign='center' />\n          <center>\n            <Table collapsing style={{ width: '80%', top: '50%', left: '50%' }}>\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell width={1}>코드</Table.HeaderCell>\n                  <Table.HeaderCell width={1}>음식명</Table.HeaderCell>\n                  <Table.HeaderCell width={3}>분류</Table.HeaderCell>\n                  <Table.HeaderCell width={3}>정보</Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {isLoading\n                  ? \"Loading...\"\n                  : foodObjs.map(each => {\n                    return (\n                      <ShowFood\n                        key={each.foodCd}\n                        foodCd={each.foodCd}\n                        foodNm={each.foodNm}\n                        foodKindNm={each.foodKindNm}\n                        largeCls={each.largeClsNm}\n                        middleCls={each.middleClsNm}\n                        smallCls={each.smallClsNm}\n                      />\n                    )\n                  })\n                }\n              </Table.Body>\n            </Table>\n          </center>\n        </Segment>\n        <Pagination onPageChange={this.changePage} style={{ marginBottom: '1em' }} defaultActivePage={1} totalPages={353} />\n      </Container>\n    );\n  }\n}\n\nexport default Home;\n","//Detail 은 페이지. \nimport { Link } from 'react-router-dom';\nimport React from 'react';\nimport axios from 'axios';\nimport { Label, Segment, Container, Message, MessageHeader } from 'semantic-ui-react';\nconst initialState = {\n  foodCd: '',\n  foodNm: '',\n  foodObj: [],\n  loaded: false,\n}\n\nclass Detail extends React.Component {\n  state = initialState\n  getFoodDetail = async (foodCd, foodNm) => {\n    this.setState({ foodCd: foodCd, foodNm: foodNm })\n    const url = `https://cors-anywhere.herokuapp.com/https://tradifood.net/api/service/TradFoodInfoService/getFoodHealthOriMediList?serviceKey=lLjoGCVK2fzZyHfHUXBIhIbHxQ8GhCmNpnKeFx4m4cfeUuneSaQMdhnxVeAcbN9CtEcRBnmMphI7zSwJL%2BJ7sg%3D%3D&pageNo=1&numOfRows=10&foodCd=${foodCd}&type=JSON&SG_APIM=2ug8Dm9qNBfD32JLZGPN64f3EoTlkpD8kSOHWfXpyrY`\n    console.log(foodCd, url)\n    try {\n      const { data: { response: { body: { items: { item } } } } } = await axios.get(url)\n      console.log('loading')\n      this.setState({ foodObj: item, loaded: true, foodCd: foodCd, foodNm: foodNm })\n\n    }\n    catch (e) {\n      //const { location, history } = this.props;\n      //history.push(\"/\");\n      console.log('getFoodDetail_error_1')\n      this.setState({ loaded: false })\n\n    }\n\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('didupdate1')\n    console.log('#', prevProps)\n    console.log('#', this.props)\n    const { location, history } = this.props;\n    //console.log(location.state.foodCd,prevLocation.state.foodCd)\n    if (location !== prevProps.location) {\n      if (location.state === undefined) {\n        history.push(\"/\");\n      }\n      else {\n        this.getFoodDetail(location.state.foodCd, location.state.foodNm);\n      }\n    }\n  }\n\n  componentDidMount() {\n    console.log('didmount1')\n    const { location, history } = this.props;\n    const { update, foodCd, foodNm } = this.state;\n    if (location.state === undefined) {\n      history.push(\"/\");\n    }\n    else {\n      this.setState({\n        foodCd: location.state.foodCd,\n        foodNm: location.state.foodNm,\n      })\n      this.getFoodDetail(location.state.foodCd, location.state.foodNm);\n      console.log('didmount2', this.state)\n    }\n\n  }\n\n  /*\n  API 정보 목록 # API이름을 써라. \n  foodCd: \"100004\"\n  foodNm: \"가물치국\"\n  institutionsNm: \"한국한의학연구원\"\n  journalNm: \"한의학고전DB\"\n  vol: \"鄕藥集成方 卷第十七 > 水病論\"\n  year: \"1433\"\n  articleNm: \"향약집성방(鄕藥集成方)\"\n  author: \"유효통, 노중례, 박윤덕 등 (兪孝通, 盧重禮, 朴允德 등)\"\n  pageStart: \"\"\n  pageEnd: \"\"\n  content: \"鱧魚粥 治水腫, 利小便.↵가물치국 수종을 치료하는데 소변을 잘 보게 한다.\"\n  etc: \"85(30)\"\n*/\n  showContent = (i) => {\n    return (\n      <div key={i.articleNm}>\n        <Segment key={i.articleNm}>\n          <p>{i.content}</p>\n          <Label key={i.articleNm}>\n            {i.articleNm}({i.vol}:{i.year}) provided by {i.journalNm}\n          </Label>\n        </Segment>\n      </div>\n    )\n  }\n  //changeQfood = (foodNm,foodCd) => {\n  //  this.setState({foodCd:foodCd, foodNm:foodNm, update:false})\n\n  //}  \n  render() {\n    let showText;\n    const { update, foodCd, foodNm, foodObj, loaded } = this.state;\n    console.log('render', this.state)\n    if (loaded === true) {\n      showText = <Message>\n        <MessageHeader>\n          {foodNm}({foodCd})\n                    </MessageHeader><br></br>\n        {foodObj.map(this.showContent)}\n      </Message>\n    } else {\n      showText = <Message>\n        <MessageHeader>\n          {foodNm}({foodCd})\n                    </MessageHeader><br></br>\n        <p> 해당 정보가 데이터베이스에 없습니다.</p>\n      </Message>\n    }\n    return (\n      <Container style={{ marginTop: \"0.5em\" }}>\n        <Segment><Link to={{\n          pathname: `/details_science/${foodCd}/`,\n          state: { foodCd, foodNm }\n        }}>\n          <span> </span><Label>학술정보</Label>\n        </Link>\n        </Segment>\n        <Segment>\n          {showText}\n        </Segment>\n      </Container>\n    )\n  }\n}\n\nexport default Detail; ","//Detail 은 페이지. \nimport { Link } from 'react-router-dom';\nimport React from 'react';\nimport axios from 'axios';\nimport { Label, Segment, Container, Message, MessageHeader } from 'semantic-ui-react';\nconst initialState = {\n    foodCd: '',\n    foodNm: '',\n    foodObj: [],\n    loaded: false,\n}\n\nclass Detail_science extends React.Component {\n    state = initialState\n    getFoodDetail = async (foodCd, foodNm) => {\n        this.setState({ foodCd: foodCd, foodNm: foodNm })\n        const url = `https://cors-anywhere.herokuapp.com/https://tradifood.net/api/service/TradFoodInfoService/getFoodHealthScholarList?serviceKey=lLjoGCVK2fzZyHfHUXBIhIbHxQ8GhCmNpnKeFx4m4cfeUuneSaQMdhnxVeAcbN9CtEcRBnmMphI7zSwJL%2BJ7sg%3D%3D&pageNo=1&numOfRows=10&foodCd=${foodCd}&type=JSON&SG_APIM=2ug8Dm9qNBfD32JLZGPN64f3EoTlkpD8kSOHWfXpyrY`\n        console.log(foodCd, url)\n        try {\n            const { data: { response: { body: { items: { item } } } } } = await axios.get(url)\n            console.log('loading')\n            this.setState({ foodObj: item, loaded: true, foodCd: foodCd, foodNm: foodNm })\n\n        }\n        catch (e) {\n            //const { location, history } = this.props;\n            //history.push(\"/\");\n            console.log('getFoodDetail_error_1')\n            this.setState({ loaded: false })\n\n        }\n\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        console.log('didupdate1')\n        console.log('#', prevProps)\n        console.log('#', this.props)\n        const { location, history } = this.props;\n        //console.log(location.state.foodCd,prevLocation.state.foodCd)\n        if (location !== prevProps.location) {\n            if (location.state === undefined) {\n                history.push(\"/\");\n            }\n            else {\n                this.getFoodDetail(location.state.foodCd, location.state.foodNm);\n            }\n        }\n    }\n\n    componentDidMount() {\n        console.log('didmount1')\n        const { location, history } = this.props;\n        const { update, foodCd, foodNm } = this.state;\n        if (location.state === undefined) {\n            history.push(\"/\");\n        }\n        else {\n            this.setState({\n                foodCd: location.state.foodCd,\n                foodNm: location.state.foodNm,\n            })\n            this.getFoodDetail(location.state.foodCd, location.state.foodNm);\n            console.log('didmount2', this.state)\n        }\n\n    }\n\n    showContent = (i) => {\n        return (\n            <div key={i.articleNm}>\n                <Segment key={i.articleNm}>\n                    <p>{i.content}</p>\n                    <Label key={i.articleNm}>\n                        {i.articleNm}({i.vol}:{i.year}) provided by {i.journalNm}\n                    </Label>\n                </Segment>\n            </div>\n        )\n    }\n    //changeQfood = (foodNm,foodCd) => {\n    //  this.setState({foodCd:foodCd, foodNm:foodNm, update:false})\n\n    //}  \n    render() {\n        let showText;\n        const { update, foodCd, foodNm, foodObj, loaded } = this.state;\n        console.log('render', this.state)\n        if (loaded === true) {\n            showText = <Message>\n                <MessageHeader>\n                    {foodNm}({foodCd})\n                    </MessageHeader><br></br>\n                {foodObj.map(this.showContent)}\n            </Message>\n        } else {\n            showText = <Message>\n                <MessageHeader>\n                    {foodNm}({foodCd})\n                    </MessageHeader><br></br>\n                <p> 해당 정보가 데이터베이스에 없습니다.</p>\n            </Message>\n        }\n        return (\n            <Container style={{ marginTop: \"0.5em\" }}>\n                <Segment><Link to={{\n                    pathname: `/details/${foodCd}/`,\n                    state: { foodCd, foodNm }\n                }}>\n                    <span> </span><Label>한의문헌정보</Label>\n                </Link>\n                </Segment>\n                <Segment>\n                    {showText}\n                </Segment>\n            </Container>\n        )\n    }\n}\n\nexport default Detail_science; ","//navi도 콤포넌트\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Input, Menu, Segment, Search, Label, Container } from 'semantic-ui-react'\nimport _ from 'lodash'\nimport faker from 'faker'\n\nconst data = require('../foodListGrep.json');\nconst source = data.body\n/*const source2 = _.times(5, () => ({\n    title: faker.company.companyName(),\n    description: faker.company.catchPhrase(),\n    image: faker.internet.avatar(),\n    price: faker.finance.amount(0, 100, 2, '$'),\n  }))*/\nconsole.log(source)\nconst initialState = {\n  activeItem: 'home',\n  isLoading: false,\n  value: '',\n  results: [],\n}\n\n\n\nclass Navigation extends React.Component {\n  state = initialState\n\n  resultRenderer = ({ foodCd, foodNm }) => {\n    return (<Link to={{\n      pathname: `/details/${foodCd}/`,\n      state: { foodCd, foodNm }\n    }}>\n      <Label key={foodCd} content={foodNm} />\n    </Link>)\n  }\n\n\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n  onChange = (x) => {\n    console.log(x)\n  }\n\n  handleResultSelect = (e, { result }) => {\n    this.setState({ value: result.foodNm });\n  }\n\n  handleSearchChange = (e, { value }) => {\n    this.setState({ isLoading: true, value })\n\n    setTimeout(() => {\n      if (this.state.value.length < 1) return this.setState(initialState)\n\n      const re = new RegExp(_.escapeRegExp(this.state.value), 'i')\n      const isMatch = (result) => re.test(result.foodNm)\n\n      this.setState({\n        isLoading: false,\n        results: _.filter(source, isMatch),\n      })\n    }, 300)\n  }\n\n  render() {\n    const { activeItem, isLoading, value, results } = this.state\n\n    return (\n      <Container style={{ marginTop: '0.5em' }}>\n        <Menu pointing>\n          <Menu.Item\n            as={Link}\n            to='/'\n            name='Home'\n            active={activeItem === 'Home'}\n            onClick={this.handleItemClick}\n          />\n          <Menu.Item\n            name='Contact'\n            active={activeItem === 'Contact'}\n            onClick={this.handleItemClick}\n          />\n          <Menu.Menu position='right'>\n            <Menu.Item>\n              <Search\n                loading={isLoading}\n                onResultSelect={this.handleResultSelect}\n                onSearchChange={_.debounce(this.handleSearchChange, 500, {\n                  leading: true,\n                })}\n                results={results}\n                value={value}\n                resultRenderer={this.resultRenderer}\n                {...this.props}\n              />\n            </Menu.Item>\n          </Menu.Menu>\n        </Menu>\n      </Container>\n    )\n  }\n}\n\nexport default Navigation;\n","import React from 'react';\nimport {\n    Segment,\n    Container,\n    Header,\n} from 'semantic-ui-react';\nfunction headerTop() {\n    return (\n        <Container>\n        <Segment inverted textAlign=\"center\">\n            <Header\n                as=\"h1\"\n                content='한국전통음식데이터베이스'\n                inverted color='yellow'\n                style={{\n                    fontFamily: 'Gulim',\n                    fontSize: '3em',\n                    fontWeight: '900',\n                    marginBottom: '0.5em',\n                    marginTop: '0.5em',\n                }}\n            />\n        </Segment>\n        </Container>)\n\n}\nexport default headerTop;","import React from 'react';\nimport {HashRouter, Route} from 'react-router-dom';\nimport Home from './pages/home';\nimport Details from './pages/detail';\nimport Details_sci from './pages/detail_science';\nimport Navigation from './routes/Navi';\nimport HeaderTop from './pages/header';\nfunction App(){\n    return(        \n        <HashRouter>\n            <HeaderTop />\n            <Navigation />\n            <Route path='/' exact={true} component={Home} />\n            <Route path='/details/:foodCd' component={Details}/>\n            <Route path='/details_science/:foodCd' component={Details_sci}/>\n        </HashRouter>\n    )\n\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}